// Написать программу, в которой объявить и присвоить начальные значения целочисленным
// переменным: a и b, определить две параллельные области, первая – с числом нитей 2,
// вторая – с числом нитей 4. Для первой области переменные a и b объявить защищенными, с
// режимом доступа private и firstprivate соответственно, внутри области определить номер
// нити и выполнить увеличение значения переменных на это величину. Выдать на экран
// значения переменных до входа в параллельную область, внутри параллельной области и
// после выхода из параллельной области. Для второй области переменную a объявить
// общей, переменную b объявить защищенной, с режимом доступа private, определить номер
// нити и выполнить уменьшение значения переменных на это величину. Выдать на экран
// значения переменных до входа в параллельную область, внутри параллельной области и
// после выхода из параллельной области.

#include <omp.h>
#include <iostream>
#include <stdio.h>

int main(void) {
	const int a = 1;
	const int b = 1;

	#pragma omp parallel private(a)
		printf ("Thread number: %d   a: %d",omp_get_thread_num(), a);
	}
}